    server {
		listen 8080;
		server_name localhost;

        # 原有 server_name，可继续新增更多当前证书支持的域名
        # server_name yourdomain.com www.yourdomain.com;
        
        # # ======================= 证书配置开始 =======================
        # # 指定证书文件（中间证书可以拼接至该pem文件中）
        # ssl_certificate /etc/nginx/certs/test.com.crt;
        # # 指定私钥文档
        # ssl_certificate_key /etc/nginx/certs/test.com.key;
        # # 配置 SSL 会话缓存，提高性能
        # ssl_session_cache shared:SSL:1m;
        # # 设置 SSL 会话超时时间
        # ssl_session_timeout 5m;
        # # 自定义设置使用的TLS协议的类型以及加密套件（以下为配置示例，请您自行评估是否需要配置）
        # ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        # # 指定允许的 TLS 协议版本，TLS协议版本越高，HTTPS通信的安全性越高，但是相较于低版本TLS协议，高版本TLS协议对浏览器的兼容性较差
        # ssl_protocols TLSv1.2 TLSv1.3;
        # # 优先使用服务端指定的加密套件
        # ssl_prefer_server_ciphers on;
        # # ======================= 证书配置结束 =======================

        root /opt/dist;
        index  index.html index.htm;

        set $wvp_host ${WVP_HOST};
        set $media_host ${MEDIA_HOST};

        location / {
			root /opt/dist;
            index  index.html index.htm;
        }
        
		location /record_proxy/{
			 proxy_set_header Host $http_host;
			 proxy_set_header X-Real-IP $remote_addr;
			 proxy_set_header REMOTE-HOST $remote_addr;
			 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			 proxy_pass http://$wvp_host:18978/;
		}

		location /api/ {
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header REMOTE-HOST $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://$wvp_host:18978;

             # 从环境变量获取原始主机地址（x.x.x.x）
            set $original_host ${STREAM_HOST};
            
            # 执行字符串替换
            # 将媒体资源文件替换为Nginx输出的相对地址
            sub_filter "http://$original_host/index/api/downloadFile" "mediaserver/api/downloadFile";
            sub_filter "http://$original_host:6080/index/api/downloadFile" "mediaserver/api/downloadFile";
            sub_filter "https://$original_host/index/api/downloadFile" "mediaserver/api/downloadFile";
            sub_filter "https://$original_host:4443/index/api/downloadFile" "mediaserver/api/downloadFile";
            sub_filter "http://$original_host/mp4_record" "mp4_record";
            sub_filter "http://$original_host:6080/mp4_record" "mp4_record";
            sub_filter "https://$original_host/mp4_record" "mp4_record";
            sub_filter "https://$original_host:4443/mp4_record" "mp4_record";
            
            # 设置为off表示替换所有匹配项，而不仅仅是第一个
            sub_filter_once off;
            
            # 确保响应被正确处理
            sub_filter_types application/json;  # 只对JSON响应进行处理
        }
        
        # 将mediaserver/record转发到目标地址
        location /mediaserver/api/downloadFile {
            # 目标服务器地址
            proxy_pass http://$media_host:6080/index/api/downloadFile;
            
            # 以下是常用的反向代理设置
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 超时设置，根据需要调整
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # 仅允许代理/rtp/开头的路径
        location ^~ /rtp/ {
            # 代理到ZLMediakit服务
            proxy_pass http://$media_host:6080;
            
            # 基础HTTP代理配置
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket支持配置
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # 超时设置，根据实际需求调整
            proxy_connect_timeout 60s;
            proxy_read_timeout 3600s;
            proxy_send_timeout 60s;
        }

        # 仅允许代理/rtp/开头的路径
        location ^~ /mp4_record/ {
            # 代理到ZLMediakit服务
            proxy_pass http://$media_host:6080;
            
            # 基础HTTP代理配置
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket支持配置
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # 超时设置，根据实际需求调整
            proxy_connect_timeout 60s;
            proxy_read_timeout 3600s;
            proxy_send_timeout 60s;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }